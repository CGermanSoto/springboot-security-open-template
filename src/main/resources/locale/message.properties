# ------ Auth ------ #
# ------------------ #
auth.access.denied=Access denied for user {0}
auth.request.null=Invalid authentication request for user {0}
auth.invalid.credentials=Invalid credentials for user {0}
auth.token.userid.invalid=Unable to extract user ID from token
# ------ Token ------ #
# ------------------- #
token.unexpected=Unexpected session error for user {0}
token.not.found=No active session found for user {0}
token.expired=Session expired for user {0}
token.update.failed=Failed to update session for user {0}
token.not.delete=Could not end session for user {0}
# ------ Monitoring ------ #
# ------------------------ #
# ------ System ------ #
# -------------------- #
error.auth.rate.limit.exceeded=Too many attempts. Try again in {0} minutes
validation.error=Validation error: {0}
error.internal.server=An unexpected error occurred: {0}
error.message.not.readable=Unable to process the request. Please check your input.
# ------ Module ------ #
# -------------------- #
module.create.empty=Module creation data is required
module.name.exists=Module with name {0} already exists
module.base.path.exists=Module with base path {0} already exists
module.create.failed=Failed to create module: {0}
module.update.empty=Module update data is required
module.update.failed=Failed to update module: {0}
module.update.success=Module {0} updated successfully
module.id.invalid=Invalid module ID: {0}
module.not.found=Module with ID {0} not found
module.exists.by.name=Module with name {0} already exists
module.exists.by.path=Module with path {0} already exists
module.get.failed=Failed to retrieve module with ID: {0}
module.search.failed=Failed to search modules with filter: {0}
module.search.invalid.sort.direction=Invalid sort direction: {0}. Must be ASC or DESC
module.get.all.failed=Failed to retrieve all modules
module.list.success=Successfully retrieved {0} modules
module.delete.failed=Failed to delete module: {0}
module.delete.success=Module {0} deleted successfully
module.create.success=Module {0} created successfully
module.found.success=Module {0} found successfully
module.search.success=Found {0} modules matching search criteria
# ------ Operation ------ #
# ----------------------- #
operation.create.empty=Operation creation data is required
operation.tag.exists=Operation with tag {0} already exists in this module
operation.path.method.exists=Operation with path {0} and method {1} already exists in this module
operation.create.failed=Failed to create operation: {0}
operation.update.empty=Operation update data is required
operation.update.failed=Failed to update operation: {0}
operation.id.invalid=Invalid operation ID: {0}
operation.get.failed=Failed to retrieve operation with ID: {0}
operation.detail.get.failed=Error al recuperar los detalles de la operaci√≥n con ID: {0}
operation.search.failed=Failed to search operations with filter: {0}
operation.module.get.failed=Failed to retrieve operations for module: {0}
operation.get.all.failed=Failed to retrieve all operations
operation.delete.failed=Failed to delete operation: {0}
operation.create.success=Operation {0} created successfully
operation.update.success=Operation {0} updated successfully
operation.found.success=Operation {0} found successfully
operation.detail.found.success=Operation {0} details found successfully
operation.search.success=Found {0} operations matching search criteria
operation.module.list.success=Retrieved {0} operations for module
operation.list.success=Successfully retrieved {0} operations
operation.delete.success=Operation {0} deleted successfully
operation.not.found=Operation {0} not found
# ------ Role ------ #
# ------------------ #
role.create.empty=Role creation data is required
role.name.exists=Role with name {0} already exists
role.name.invalid=Invalid role name: {0}
role.create.failed=Failed to create the role: {0}
role.update.empty=Role update data is required
role.update.failed=Failed to update the role: {0}
role.id.invalid=Invalid role ID: {0}
role.get.failed=Failed to retrieve the role with ID: {0}
role.detail.get.failed=Failed to retrieve role details for ID: {0}
role.search.failed=Failed to search roles with filter: {0}
role.get.all.failed=Failed to retrieve all roles
role.delete.failed=Failed to delete the role: {0}
role.delete.system.role=Cannot delete system role: {0}
role.name.empty=Role name cannot be empty
role.not.found.by.name=Role with name {0} not found
role.find.by.name.failed=Failed to find the role with name: {0}
role.create.success=Role {0} created successfully
role.update.success=Role {0} updated successfully
role.found.success=Role {0} found successfully
role.detail.found.success=Role {0} details found successfully
role.search.success=Found {0} roles matching search criteria
role.list.success=Successfully retrieved {0} roles
role.delete.success=Role {0} deleted successfully
role.not.found=Role {0} not found
# ------ Permission ------ #
# ------------------------ #
permission.create.empty=Permission creation data is required
permission.create.failed=Failed to create permission for role {0} and operation {1}
permission.role.operation.exists=Permission with role ID {0} and operation ID {1} already exists
permission.update.empty=Permission update data is required
permission.update.failed=Failed to update permission with ID: {0}
permission.not.found=Permission with ID {0} not found
permission.id.invalid=Invalid permission ID: {0}
permission.get.failed=Failed to retrieve permission with ID: {0}
permission.detail.get.failed=Failed to retrieve permission details for ID: {0}
permission.search.failed=Failed to search permissions with filter: {0}
permission.role.list.failed=Failed to retrieve permissions for role ID: {0}
permission.get.all.failed=Failed to retrieve all permissions
permission.delete.failed=Failed to delete permission with ID: {0}
permission.create.success=Permission created successfully for operation {0}
permission.update.success=Permission updated successfully for operation {0}
permission.found.success=Permission found successfully for operation {0}
permission.detail.found.success=Permission details found successfully for operation {0}
permission.search.success=Found {0} permissions matching search criteria
permission.role.list.success=Retrieved {0} permissions for the role
permission.list.success=Successfully retrieved {0} permissions
permission.delete.success=Permission successfully deleted for operation {0}
# ------ System Admin ------ #
# -------------------------- #
system.admin.create.empty=System admin creation data is required
system.admin.create.failed=Failed to create system admin: {0}
system.admin.username.exists=System admin with username {0} already exists
system.admin.email.exists=System admin with email {0} already exists
system.admin.update.empty=System admin update data is required
system.admin.update.failed=Failed to update system admin: {0}
system.admin.id.invalid=Invalid system admin ID: {0}
system.admin.get.failed=Failed to retrieve system admin: {0}
system.admin.not.found=System admin with ID {0} not found
system.admin.detail.get.failed=Failed to retrieve system admin details: {0}
system.admin.get.entity.failed=Failed to retrieve system admin entity with ID: {0}
system.admin.search.failed=Failed to search system admins with filter: {0}
system.admin.status.empty=System admin status cannot be empty
system.admin.status.change.failed=Failed to change system admin status: {0}
system.admin.username.empty=Username cannot be empty
system.admin.username.check.failed=Failed to check if username exists: {0}
system.admin.email.empty=Email cannot be empty
system.admin.email.check.failed=Failed to check if email exists: {0}
system.admin.invalid.role=User with ID {0} is not a system administrator
system.admin.create.success=System admin {0} created successfully
system.admin.update.success=System admin {0} updated successfully
system.admin.found.success=System admin {0} found successfully
system.admin.detail.found.success=System admin {0} details found successfully
system.admin.search.success=Found {0} system administrators
system.admin.status.change.success=System admin {0} status changed to {1}
system.admin.delete.success=System admin {0} deleted successfully
system.admin.delete.failed=Failed to delete system admin: {0}
# ------ Developer ------ #
# ----------------------- #
developer.create.empty=Developer creation data is required
developer.create.failed=Failed to create the developer: {0}
developer.username.exists=Developer with username {0} already exists
developer.email.exists=Developer with email {0} already exists
developer.update.empty=Developer update data is required
developer.update.failed=Failed to update the developer: {0}
developer.id.invalid=Invalid developer ID: {0}
developer.get.failed=Failed to retrieve the developer with ID: {0}
developer.get.entity.failed=Failed to retrieve developer entity with ID: {0}
developer.not.found=Developer with ID {0} not found
developer.invalid.role=User with ID {0} is not a developer
developer.detail.get.failed=Failed to retrieve developer details for ID: {0}
developer.search.failed=Failed to search developers with filter: {0}
developer.status.empty=Developer status cannot be empty
developer.status.change.failed=Failed to change developer status: {0}
developer.username.empty=Developer username cannot be empty
developer.username.check.failed=Failed to check if username exists: {0}
developer.email.empty=Developer email cannot be empty
developer.email.check.failed=Failed to check if email exists: {0}
developer.delete.failed=Failed to delete the developer: {0}
developer.create.success=Developer {0} created successfully
developer.update.success=Developer {0} updated successfully
developer.found.success=Developer {0} found successfully
developer.detail.found.success=Developer {0} details found successfully
developer.search.success=Found {0} developers
developer.status.change.success=Developer {0} status changed to {1}
developer.delete.success=Developer {0} deleted successfully
# ------ Manager ------ #
# --------------------- #
manager.create.empty=Manager creation data is required
manager.create.failed=Failed to create the manager: {0}
manager.username.exists=Manager with username {0} already exists
manager.email.exists=Manager with email {0} already exists
manager.update.empty=Manager update data is required
manager.update.failed=Failed to update the manager: {0}
manager.id.invalid=Invalid manager ID: {0}
manager.get.failed=Failed to retrieve the manager with ID: {0}
manager.get.entity.failed=Failed to retrieve manager entity with ID: {0}
manager.not.found=Manager with ID {0} not found
manager.invalid.role=User with ID {0} is not a manager
manager.detail.get.failed=Failed to retrieve manager details for ID: {0}
manager.search.failed=Failed to search managers with filter: {0}
manager.status.empty=Manager status cannot be empty
manager.status.change.failed=Failed to change manager status: {0}
manager.username.empty=Manager username cannot be empty
manager.username.check.failed=Failed to check if username exists: {0}
manager.email.empty=Manager email cannot be empty
manager.email.check.failed=Failed to check if email exists: {0}
manager.delete.failed=Failed to delete the manager: {0}
manager.create.success=Manager {0} created successfully
manager.update.success=Manager {0} updated successfully
manager.found.success=Manager {0} found successfully
manager.detail.found.success=Manager {0} details found successfully
manager.search.success=Found {0} managers
manager.status.change.success=Manager {0} status changed to {1}
manager.delete.success=Manager {0} deleted successfully
# ------ Editor ------ #
# -------------------- #
editor.create.empty=Editor creation data is required
editor.create.failed=Failed to create the editor: {0}
editor.username.exists=Editor with username {0} already exists
editor.email.exists=Editor with email {0} already exists
editor.update.empty=Editor update data is required
editor.update.failed=Failed to update the editor: {0}
editor.id.invalid=Invalid editor ID: {0}
editor.get.failed=Failed to retrieve the editor with ID: {0}
editor.get.entity.failed=Failed to retrieve editor entity with ID: {0}
editor.not.found=Editor with ID {0} not found
editor.invalid.role=User with ID {0} is not an editor
editor.detail.get.failed=Failed to retrieve editor details for ID: {0}
editor.search.failed=Failed to search editors with filter: {0}
editor.status.empty=Editor status cannot be empty
editor.status.change.failed=Failed to change editor status: {0}
editor.username.empty=Editor username cannot be empty
editor.username.check.failed=Failed to check if username exists: {0}
editor.email.empty=Editor email cannot be empty
editor.email.check.failed=Failed to check if email exists: {0}
editor.delete.failed=Failed to delete the editor: {0}
editor.create.success=Editor {0} created successfully
editor.update.success=Editor {0} updated successfully
editor.found.success=Editor {0} found successfully
editor.detail.found.success=Editor {0} details found successfully
editor.search.success=Found {0} editors
editor.status.change.success=Editor {0} status changed to {1}
editor.delete.success=Editor {0} deleted successfully
# ------ Viewer ------ #
# -------------------- #
viewer.create.empty=Viewer creation data is required
viewer.create.failed=Failed to create the viewer: {0}
viewer.username.exists=Viewer with username {0} already exists
viewer.email.exists=Viewer with email {0} already exists
viewer.update.empty=Viewer update data is required
viewer.update.failed=Failed to update the viewer: {0}
viewer.id.invalid=Invalid viewer ID: {0}
viewer.get.failed=Failed to retrieve the viewer with ID: {0}
viewer.get.entity.failed=Failed to retrieve viewer entity with ID: {0}
viewer.not.found=Viewer with ID {0} not found
viewer.invalid.role=User with ID {0} is not a viewer
viewer.detail.get.failed=Failed to retrieve viewer details for ID: {0}
viewer.search.failed=Failed to search viewers with filter: {0}
viewer.status.empty=Viewer status cannot be empty
viewer.status.change.failed=Failed to change viewer status: {0}
viewer.username.empty=Viewer username cannot be empty
viewer.username.check.failed=Failed to check if username exists: {0}
viewer.email.empty=Viewer email cannot be empty
viewer.email.check.failed=Failed to check if email exists: {0}
viewer.delete.failed=Failed to delete the viewer: {0}
viewer.create.success=Viewer {0} created successfully
viewer.update.success=Viewer {0} updated successfully
viewer.found.success=Viewer {0} found successfully
viewer.detail.found.success=Viewer {0} details found successfully
viewer.search.success=Found {0} viewers
viewer.status.change.success=Viewer {0} status changed to {1}
viewer.delete.success=Viewer {0} deleted successfully
# ------ Guest ------- #
# -------------------- #
guest.create.empty=Guest creation data is required
guest.create.failed=Failed to create the guest: {0}
guest.username.exists=Guest with username {0} already exists
guest.email.exists=Guest with email {0} already exists
guest.update.empty=Guest update data is required
guest.update.failed=Failed to update the guest: {0}
guest.id.invalid=Invalid guest ID: {0}
guest.get.failed=Failed to retrieve the guest with ID: {0}
guest.get.entity.failed=Failed to retrieve guest entity with ID: {0}
guest.not.found=Guest with ID {0} not found
guest.invalid.role=User with ID {0} is not a guest
guest.detail.get.failed=Failed to retrieve guest details for ID: {0}
guest.search.failed=Failed to search guests with filter: {0}
guest.status.empty=Guest status cannot be empty
guest.status.change.failed=Failed to change guest status: {0}
guest.username.empty=Guest username cannot be empty
guest.username.check.failed=Failed to check if username exists: {0}
guest.email.empty=Guest email cannot be empty
guest.email.check.failed=Failed to check if email exists: {0}
guest.delete.failed=Failed to delete the guest: {0}
guest.create.success=Guest {0} created successfully
guest.update.success=Guest {0} updated successfully
guest.found.success=Guest {0} found successfully
guest.detail.found.success=Guest {0} details found successfully
guest.search.success=Found {0} guests
guest.status.change.success=Guest {0} status changed to {1}
guest.delete.success=Guest {0} deleted successfully
# ------ User ------ #
# ------------------ #
user.profile=Profile retrieved for user {0}
user.not.exists.by.username=User {0} not found
user.not.found=User with ID {0} not found
user.profile.found.success=User profile for {0} found successfully
# ------ JWT Authentication ------ #
# -------------------------------- #
auth.token.error=Unexpected error processing JWT token: {0}
auth.token.invalid=Invalid JWT token provided: {0}
auth.token.expired=JWT token has expired: {0}
auth.token.empty=JWT token cannot be empty or null: {0}
auth.token.malformed=Malformed JWT token structure: {0}
auth.token.invalid.format=Invalid JWT token format - expected 3 parts but got: {0}
auth.token.parse.error=Error parsing JWT token claims: {0}
auth.token.signature.invalid=Invalid JWT signature: {0}
auth.token.claim.missing=Required JWT claim is missing: {0}
auth.token.validation=JWT validation error: {0}
auth.token.claims.invalid=Invalid token claims
auth.token.header.missing=Authorization header is missing
auth.token.header.invalid=Invalid authorization header format
auth.token.header.validation.error=Invalid JWT header structure: {0}
auth.token.header.type.invalid=Invalid JWT header type, expected JWT: {0}
auth.token.header.alg.invalid=Invalid JWT algorithm, expected HS256: {0}
auth.token.header.decode.error=Failed to decode JWT header: {0}
auth.token.header.format.invalid=Invalid JWT header format: {0}
auth.token.key.invalid=Invalid JWT key format: Key must be at least 256 bits
auth.token.key.error=Error generating JWT key: {0}
auth.login.success=User {0} logged in successfully
auth.token.refresh.success=Token refreshed successfully for user {0}
auth.logout.success=User {0} logged out successfully
auth.token.validate.success=Token {0} validated successfully
# ------ Token Refresh ------ #
# --------------------------- #
token.refresh.track.failed=Failed to track token refresh: {0}
token.refresh.count.failed=Failed to get token refresh count: {0}
token.refresh.failed=Failed to refresh token for user {0}
auth.logout.failed=Failed to logout user {0}
# ------ Token Cache ------ #
# ------------------------- #
token.cache.error=Error caching token: {0}
token.cache.retrieve.error=Error retrieving token from cache: {0}
token.cache.remove.error=Error removing token from cache: {0}
token.cache.clear.error=Error clearing token cache: {0}
# ------ Token Lifecycle ------ #
# ----------------------------- #
token.lifecycle.initiate.error=Error initiating token lifecycle: {0}
token.lifecycle.activate.error=Error activating token: {0}
token.lifecycle.refresh.error=Error refreshing token lifecycle: {0}
token.lifecycle.expire.error=Error expiring token: {0}
token.lifecycle.revoke.error=Error revoking token: {0}
token.lifecycle.state.error=Error getting token state: {0}
token.rate.limit.exceeded=Rate limit exceeded. Please try again in {0} minute(s).
# ------ Token Usage ---------- #
# ----------------------------- #
token.tracking.expire.error=Failed to track token expiration: {0}
token.tracking.access.error=Failed to track token access: {0}
token.tracking.refresh.error=Failed to track token refresh: {0}
token.tracking.stats.error=Failed to retrieve token usage statistics: {0}
# ------ Token Cleanup -------- #
# ----------------------------- #
token.cleanup.expired.failed=Failed to clean up expired tokens: {0}
token.cleanup.revoked.failed=Failed to clean up revoked tokens: {0}
token.cleanup.inactive.failed=Failed to clean up inactive tokens: {0}
token.cleanup.blacklisted.failed=Failed to clean up blocklisted tokens: {0}
# ------ Token Metrics -------- #
# ----------------------------- #
token.metrics.generation.error=Error recording token generation metrics: {0}
token.metrics.validation.error=Error recording token validation metrics: {0}
token.metrics.refresh.error=Error recording token refresh metrics: {0}
token.metrics.invalidation.error=Error recording token invalidation metrics: {0}
# ------ Token Generic -------- #
# ----------------------------- #
token.invalid=Invalid token
# ------ Rate Limit Cache ------ #
# ------------------------------ #
rate.limit.stats.success=Retrieved rate limit statistics for {0} IPs
rate.limit.reset.success=Rate limit reset successfully for IP: {0}
rate.limit.cleanup.success=Rate limit cache cleaned successfully
# ------ Token ------ #
# ------------------- #
token.update.concurrent=Concurrent token update detected for user {0}
# ------ Permissions Cache ------ #
permission.cache.error=Error caching permissions
permission.cache.remove.error=Error removing permissions from cache
permission.cache.clear.error=Error clearing permissions cache
permission.user.list.success=Retrieved {0} permissions for current user